Index: Source_Files/Network/SDL_netx.cpp
===================================================================
--- Source_Files/Network/SDL_netx.cpp	(revision 4513)
+++ Source_Files/Network/SDL_netx.cpp	(working copy)
@@ -32,6 +32,11 @@
 #elif defined(__BEOS__)
 # include <sys/socket.h>
 # include <netinet/in.h>
+#elif defined(__WII__)
+# include <unistd.h>
+# include <sys/socket.h>
+# include <netinet/in.h>
+# include <sys/ioctl.h>
 #else
 # include <unistd.h>
 # include <sys/socket.h>
@@ -57,7 +62,7 @@
 
 
 // Win32 allows 255.255.255.255 as broadcast, much easier
-#if !defined(WIN32) && !defined(__BEOS__) && !(defined(mac) /*&& !defined(TARGET_API_MAC_CARBON)*/)
+#if !defined(WIN32) && !defined(__BEOS__) && !defined(__WII__) && !(defined(mac) /*&& !defined(TARGET_API_MAC_CARBON)*/)
 // FILE-LOCAL (static) CONSTANTS
 static const int	kMaxNumBroadcastAddresses	= 8;
 static const int	kIFConfigBufferSize		= 1024;	// in bytes
@@ -77,7 +82,7 @@
 // EXTERNALLY-VISIBLE FUNCTIONS
 int
 SDLNetx_EnableBroadcast(UDPsocket inSocket) {
-#if !defined(WIN32) && !defined(__BEOS__) && !defined(mac) && !defined(__MWERKS__)/*&& !defined(TARGET_API_MAC_CARBON))*/
+#if !defined(WIN32) && !defined(__BEOS__) && !defined(__WII__) && !defined(mac) && !defined(__MWERKS__)/*&& !defined(TARGET_API_MAC_CARBON))*/
     if(!sCollectedBroadcastAddresses)
         SDLNetxint_CollectBroadcastAddresses(inSocket);
 #endif
@@ -141,7 +146,7 @@
 
 
 // see simpler function below for Win32
-#if !defined(WIN32) && !defined(__BEOS__) && !(defined(mac) /*&& !defined(TARGET_API_MAC_CARBON)*/)
+#if !defined(WIN32) && !defined(__BEOS__) && !defined(__WII__) && !(defined(mac) /*&& !defined(TARGET_API_MAC_CARBON)*/)
 int
 SDLNetx_UDP_Broadcast(UDPsocket inSocket, UDPpacket* inPacket) {
     int	theCountOfSuccessfulSends = 0;
@@ -164,7 +169,7 @@
 #else
 // Win32 (at least, Win 98) seems to accept 255.255.255.255 as a valid broadcast address.
 // I'll live with that for now.
-// Also doing that for the BeOS and Mac Classic
+// Also doing that for the BeOS and Mac Classic and Wii
 int
 SDLNetx_UDP_Broadcast(UDPsocket inSocket, UDPpacket* inPacket) {
 	Uint32 theSavedHostAddress = inPacket->address.host;
@@ -178,7 +183,7 @@
 
 
 // INTERNAL (static) FUNCTIONS
-#if !defined(WIN32) && !defined(__BEOS__) && !defined(mac) && !defined(__MWERKS__)/*&& !defined(TARGET_API_MAC_CARBON))*/
+#if !defined(WIN32) && !defined(__BEOS__) && !defined(__WII__) && !defined(mac) && !defined(__MWERKS__)/*&& !defined(TARGET_API_MAC_CARBON))*/
 int
 SDLNetxint_CollectBroadcastAddresses(UDPsocket inSocket) {
     // Win or lose, we played the game.
