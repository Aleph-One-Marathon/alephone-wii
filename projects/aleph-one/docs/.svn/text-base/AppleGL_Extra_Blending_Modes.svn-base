Checking out various OpenGL blending modes; AppleGL features these extra ones:

Extra possible arguments for glBlendFunc():

/* EXT_blend_color */
#define GL_CONSTANT_COLOR_EXT             0x8001
#define GL_ONE_MINUS_CONSTANT_COLOR_EXT   0x8002
#define GL_CONSTANT_ALPHA_EXT             0x8003
#define GL_ONE_MINUS_CONSTANT_ALPHA_EXT   0x8004
#define GL_BLEND_COLOR_EXT                0x8005

Possible arguments for glBlendEquationEXT():

/* EXT_blend_minmax */
#define GL_FUNC_ADD_EXT                   0x8006
#define GL_MIN_EXT                        0x8007
#define GL_MAX_EXT                        0x8008
#define GL_BLEND_EQUATION_EXT             0x8009

/* EXT_blend_subtract */
#define GL_FUNC_SUBTRACT_EXT              0x800A
#define GL_FUNC_REVERSE_SUBTRACT_EXT      0x800B

/* EXT_blend_color */
extern void glBlendColorEXT (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);

/* EXT_blend_minmax */
extern void glBlendEquationEXT (GLenum mode);


Interpretation:

glBlendEquationEXT() can be used to change the blending equation, which is

Cr = operation(Cs,Cd)

where Cr is the result, and Cs and Cd are appropriately modified source and destination colors

GL_FUNC_ADD_EXT:				Cr = Cs + Cd
GL_FUNC_SUBTRACT_EXT:			Cr = Cs - Cd
GL_FUNC_REVERSE_SUBTRACT_EXT:	Cr = Cd - Cs
GL_MIN_EXT:						Cr = min(Cs,Cd)
GL_MAX_EXT:						Cr = max(Cs,Cd)

To query which equation mode, call a Get() with the type parameter GL_BLEND_EQUATION_EXT.


The blend-color extension is for introducing an extra color into the blending equations;
glBlendFunc() accepts the various CONSTANT_COLOR/CONSTANT_ALPHA parameters,
which make it use the blend color as its source of parameter values.


To find out which extensions are active, examine the results of
glGetString(GL_EXTENSIONS);

EXT_blend_color
EXT_blend_minmax
EXT_blend_subtract

appear to be absent from OpenGL 1.1.3 for the Rage 128.
